@model CollectionViewModel
@{
    ViewData["Title"] = Model.CollectionName;
    ViewData.AddActivePage(SharedNavPages.Collections.ResolveName(Model.CollectionName));
    var items = Model.Items.Select(item => {
        var data = item.Data;
        data["@link"] = Url.CollectionDataLink(Model.CollectionName, item.Id);
        return data;
    });
    var method = Html.GetEnumSelectList<SearchMethod>().Select(o => { o.Selected = o.Value == ((int)Model.SearchMethod).ToString(); return o; });
}

<aiplugs-blade label="@Model.CollectionName">
    <form id="collections" class="flex flex-column" method="get">
        <input type="hidden" name="collection" value="@Model.CollectionName" />
        <header>
            <div style="display:flex; padding: 0 1.2rem;">
                <select name="method" asp-items="@method"></select>
                <input type="search" name="query" value="@Model.SeachQuery" style="flex: 1; padding: 0 1.2rem;">
                <button type="submit" is="aiplugs-button"><i class="fa fa-search"></i></button>
            </div>
        </header>
        <aiplugs-actions>
            <a href="/collections/@Model.CollectionName/@@new" is="aiplugs-button" looks="block">Create New</a>
            <button is="aiplugs-button" name="exec" value="ValidateAll"
                    ic-post-to="/collections/@Model.CollectionName" ic-target="#detail" ic-include="#collections">
                Validate All
            </button>
            @foreach (var procedure in Model.Procedures)
            {
                <button type="button" is="aiplugs-button" name="exec" value="@procedure.Name"
                        ic-post-to="/collections/@Model.CollectionName" ic-target="#detail" ic-include="#collections">
                    @procedure.Name
                </button>
            }
        </aiplugs-actions>
        <aiplugs-list label-title="*" label-lastmodified="Last Modified" label-status="Validation" onchange="onSelectedItems()">
            @foreach (var item in Model.Items)
            {
                var title = @item.Data.SelectToken(Model.TitlePath)?.ToString();
                <aiplugs-list-item name="items[]" item="@item.Id">
                    <aiplugs-list-column class="flex">
                        <a open="/collections/@Model.CollectionName/@item.Id/view" open-to="#detail" ic-swap-style="replace">@title</a>
                    </aiplugs-list-column>
                    <aiplugs-list-column class="text-small">@item.UpdatedAt.ToLocalTime().DateTime</aiplugs-list-column>
                    <aiplugs-list-column class="text-small">
                        @if (item.IsValid)
                        {
                            <i class="fa fa-check-circle"></i><text>Valid</text>
                        }
                        else
                        {
                            <i class="fa fa-times-circle error-color"></i><text>Valid</text>
                        }
                    </aiplugs-list-column>
                </aiplugs-list-item>
            }
        </aiplugs-list>
    </form>
</aiplugs-blade>
<div id="detail" class="flex flex-row"></div>
@section Scripts
{
    <script>
        function onSelectedItems() {

        }
    </script>
}