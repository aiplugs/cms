@model CollectionViewModel
@{
    ViewData["Title"] = Model.CollectionName;
    ViewData.AddActivePage(SharedNavPages.Collections.ResolveName(Model.CollectionName));
    var items = Model.Items.Select(item => {
        var data = item.Data;
        data["@link"] = Url.CollectionDataLink(Model.CollectionName, item.Id);
        return data;
    });
    var method = Html.GetEnumSelectList<SearchMethod>().Select(o => { o.Selected = o.Value == ((int)Model.SearchMethod).ToString(); return o; });
}

<aiplugs-blade label="@Model.CollectionName">
    <form id="collections" class="flex flex-column" method="get" action="/collections/@Model.CollectionName">
        <input type="hidden" name="collection" value="@Model.CollectionName" />
        <aiplugs-search method-list="@method" select-name="method" name="query" />
        <aiplugs-actions>
            <a href="/collections/@Model.CollectionName/@@new" is="aiplugs-button" looks="block">Create New</a>
            <button is="aiplugs-button" name="exec" value="ValidateAll"
                    ic-post-to="/jobs" ic-target="#detail" ic-include="#collections">
                Validate All
            </button>
            @if (Model.Procedures.Count() <= 0)
            {
                foreach (var procedure in Model.Procedures)
                {
                    <button type="button" is="aiplugs-button" name="exec" value="@procedure.Name"
                            ic-post-to="/jobs" ic-target="#detail" ic-include="#collections">
                        @procedure.Name
                    </button>
                }
            } else {
                var commands = Model.Procedures.Select(c => new SelectListItem { Text = c.Name, Value = c.Name});
                <button type="button" is="aiplugs-selectable-button" selection="@commands" name="exec" 
                        ic-post-to="/jobs" ic-target="#detail" ic-include="#collections">Exec</button>
            }
        </aiplugs-actions>
        <aiplugs-list label-title="*" label-lastmodified="Last Modified" label-status="Validation">
            @if (Model.HasPrev())
            {
                <aiplugs-list-item ic-get-from="/collections/@Model.CollectionName?skipToken=@(Model.PrevSkipToken())&desc=false&style=NoBlade" ic-trigger-on="in-viewport" ic-replace-target="true"></aiplugs-list-item>
            }
            @foreach (var item in Model.Items)
            {
                var title = @item.Data.SelectToken(Model.TitlePath)?.ToString();
                <aiplugs-list-item name="items[]" item="@item.Id" selected=@(@item.Id == Model.Data?.Item.Id)>
                    <aiplugs-list-column class="flex">
                        <a open="/collections/@Model.CollectionName/@item.Id" replace-to="#detail" ic-push-url="true">@title</a>
                    </aiplugs-list-column>
                    <aiplugs-list-column class="text-small">@item.UpdatedAt.ToLocalTime().DateTime</aiplugs-list-column>
                    <aiplugs-list-column class="text-small">
                        @if (item.IsValid)
                        {
                            <i class="fa fa-check-circle"></i><text>Valid</text>
                        }
                        else
                        {
                            <i class="fa fa-times-circle error-color"></i><text>Invalid</text>
                        }
                    </aiplugs-list-column>
                </aiplugs-list-item>
            }
            @if (Model.HasNext())
            {
                <aiplugs-list-item class="in-viewport" ic-get-from="/collection/@Model.CollectionName?skipToken=@(Model.NextSkipToken())&desc=true&style=NoBlade" ic-trigger-on="in-viewport" ic-replace-target="true"></aiplugs-list-item>
            }
        </aiplugs-list>
    </form>
</aiplugs-blade>
<div id="detail" class="flex flex-row">
    @if (Model.Data != null) {
        <partial name="Item" model=Model.Data />
    }
</div>
@section Scripts {
    @if (Model.Data != null) {
        <script>document.querySelector('.aiplugs-list tbody').scroll(0, 50);</script>
    }
}